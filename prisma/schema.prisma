generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id          String   @id @default(cuid())
  fullName    String   @map("full_name")
  email       String   @unique
  password    String
  phoneNumber String   @map("phone_number")
  role        Role     @default(USER)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // Index untuk cursor pagination
  @@index([createdAt, id], map: "idx_users_created_at_id")           
  @@index([role, createdAt, id], map: "idx_users_role_created_at_id")     
  @@index([createdAt(sort: Desc), id(sort: Desc)], map: "idx_users_created_desc_id_desc")

  @@map("users")
}

model Detection {
  id            Int      @id @default(autoincrement())
  timestamp     DateTime
  fishCount     Int      @map("fish_count")
  results       String   @db.Text  // ✅ String dengan @db.Text untuk MySQL
  fishDetections FishDetection[]
  createdAt     DateTime @default(now()) @map("created_at")
  
  @@map("detections")
}

model FishDetection {
  id           Int       @id @default(autoincrement())
  detectionId  Int       @map("detection_id")
  fishName     String    @db.VarChar(100) @map("fish_name")
  confidence   Float
  boundingBox  String    @db.Text @map("bounding_box")  // ✅ String dengan @db.Text
  detection    Detection @relation(fields: [detectionId], references: [id], onDelete: Cascade)
  createdAt    DateTime  @default(now()) @map("created_at")
  
  @@map("fish_detections")
}